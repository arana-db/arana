#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  pull_request_target:
    branches:
      - master

jobs:
  build:
    name: ${{ matrix.os }} - Go ${{ matrix.go_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      # If you want to matrix build , you can append the following list.
      matrix:
        go_version:
          - 1.16
        os:
          - ubuntu-latest

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          # Cache
          path: ~/go/pkg/mod
          # Cache key
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Go Fmt
        run: |
          go fmt ./... && git status && [[ -z `git status -s` ]]
          # diff -u <(echo -n) <(gofmt -d -s .)

      - name: Go Test
        run: |
          go mod vendor && go test ./pkg/... -coverprofile=coverage.txt -covermode=atomic

      - name: Shutdown Ubuntu MySQL (SUDOx)
        run: sudo service mysql stop

      - name: Makefile integration-test
        shell: bash
        run: make integration-test

      - name: Coverage
        run: bash <(curl -s https://codecov.io/bash)
